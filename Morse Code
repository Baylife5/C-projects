#include <iostream>
#include <string>
#include <stdlib.h>

using namespace std;

string CharToMorse(const char);
string MorseToChar(const string&);
int getOption();
void Encode();
void Decode();


const string ASCII_ALPHABET[26]= {
    "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M",
    "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
};

const string ASCII_NUMERICS[10] = {
    "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"
};

const string ASCII_PUNCT[3] = {
    "stop", ",", "?"
};

const string MORSE_ALPHABET[]= {
    ".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---", "-.-", ".-..", "--",
    "-.", "---", ".--.", "--.-",".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--..",
};

const string MORSE_NUMERICS[] = {
    "-----", ".----", "..---", "...--", "....-", ".....", "-....", "--...", "---..", "----."
};

const string MORSE_PUNCT[] = {
    ".-.-.-", "--..--", "..--.."
};

int main()
{
    bool again = true;
    do {
        int option = getOption();
        switch (option)
        {
        case 1: Encode(); break;
        case 2: Decode(); break;
        case 3: again = false; break;
        }
    } while( again );
    
    return 0;
}

void Encode()
{
    cout <<"\n enter a word: ";
    string word;
    getline(cin, word);
    string morse;
    for(int i = 0; i < word.length(); i++)
    {
        const char letter = word[i];
        morse += CharToMorse(std::toupper(letter))+"  ";
    }
    cout <<  "\nIn morse the message is: " << morse << "    " << endl;
    cout << "\n\n\n";
    system("pause");
    system("cls");
}

void Decode()
{
    string word;
    char run = 'Y';
    while (run=='Y'|| run =='y')
    {
        cout << "\n\n enter a single Morse code to translate to English: ";
        string morse;
        getline(cin,morse);
        cin.ignore();
        word += MorseToChar(morse);
        cout << "\nrun again ";
        cin >> run;
       cin.ignore();
    }
    cout << "\n\nThe Decoded message is: ";
    cout << word;
    cout << " ";
    cout<<"\n\n\n\n";
    system("pause");
    system("cls");
}


int getOption() {
    cout << "\n\n\t This an application that enables you to convert Morse-code to English and vice versa. ";
    cout << "\n\n 1) English to Morse-Code "
         << "\n 2) Morse-code to English "
         << "\n 3) Quit ";
    cout << "\n\n enter an option: ";
    int option;
    cin >> option;
    cin.ignore();
    return option;
    system("cls");

}

string CharToMorse(const char letter)
{
    string morse = " ";
    if (letter >= 'A' && letter <= 'Z')
        morse = MORSE_ALPHABET[ letter-'A' ];
    else if (letter >= '0' && letter <= '9')
        morse = MORSE_NUMERICS[letter - '0'];
    else if (letter == ',')
        morse = MORSE_PUNCT[1];
    else if (letter == '?')
        morse = MORSE_PUNCT[2];
    return morse;
}

string MorseToChar(const string& letter)
{
    string ascii;

    ///Is it in the alphabet?
    for( int i=0; i<26; ++i)
        if (MORSE_ALPHABET[i] == letter)
            ascii = ASCII_ALPHABET[i];

    ///Is it a; number?
    for( int i=0; i<10; ++i)
        if (MORSE_NUMERICS[i] == letter)
            ascii = ASCII_NUMERICS[i];

    ///Is it punctuation?
    for( int i=0; i<3; ++i)
        if (MORSE_PUNCT[i] == letter)
            ascii = ASCII_PUNCT[i];

    ///Could not find letter
    return ascii;
}
